{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SATS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAS,IACnBP,GAAc,SAAAQ,GAAI,OAAGN,GAAH,mBAAiBM,OACnCL,EAAc,MAKlB,SACI,uBACIM,KAAK,OACLC,MAAOR,EACPS,SAhBY,SAACN,GACrBF,EAAcE,EAAEO,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QARtB,kBAWZM,GAXY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAClC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GACzB,MAA0Bb,mBAAS,CAC/BoB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGtB,CAACpB,IAEIqB,EDbyBK,CAAa1B,GAAhCa,EAAb,EAAQN,KAAYa,EAApB,EAAoBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,2DAAd,SAA0EhB,IACzEoB,GAAW,mBAAGJ,UAAU,qDAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACf,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEZpBgB,EAAe,WACxB,MAAoCxC,mBAAS,CAAC,cAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ0C,EAAWnB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCXjC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.306b792f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange=(e)=>{\n        setInputValue(e.target.value);\n    }\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        if(inputValue.length > 2){\n            setCategories(cats=>[inputValue,...cats]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories : PropTypes.func.isRequired\n}\n","export const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=D9203eQxvMT4uZ2Ah5Ce9Gib3wFEvpxk`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    const gifs = data.map(img =>{\n        return {\n            id:img.id,\n            title:img.title,\n            url:img.images?.downsized_medium.url\n        }\n    });\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({id,title,url}) => {\n    return (\n        <div className=\"card animate__animated animate__bounce\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const { data:images,loading } = useFetchGifs(category);\n    \n    return (\n        <>\n            <h3 className=\"animate__animated animate__backInRight animate__repeat-2\">{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash animate__repeat-2\">Loading</p>}\n            <div className=\"card-grid\">\n                {\n                    images.map( img => (\n                    <GifGridItem\n                        key={img.id}\n                        {...img}\n                    />\n                    ))\n                }\n            </div>\n        </>\n    ) \n}\n","import { useEffect, useState } from 'react';\nimport { getGifs} from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data:[],\n        loading: true\n    });\n\n    useEffect(()=>{\n        getGifs(category)\n            .then(imgs =>{\n                setState({\n                    data:imgs,\n                    loading:false\n                });\n            })\n    },[category]);\n  \n    return state;//{data: [], loading:true}\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n    const [categories, setCategories] = useState(['One Punch']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr/>\n            <ol>\n                {\n                    categories.map((category)=>(\n                        <GifGrid\n                            key={category}\n                            category={category}\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}